[ { "title": "Java Optional", "url": "/SimpleBlog/posts/Java-Optional/", "categories": "Language, Java", "tags": "java", "date": "2021-03-29 01:11:12 +0900", "snippet": "Optional Java 8 버전부터 추가된 Class임의의 값이 존재하지 않을수도 있을 때 (Null Check가 필요할 때) 해당 값을 좀 더 안전하게 사용 가능하도록 만들어짐Optional 생성 empty 비어있는 Optional을 생성한다 Function Name Parameter Return Type 비고 empty ..." }, { "title": "Java Collectors", "url": "/SimpleBlog/posts/Java-Collectors/", "categories": "Language, Java", "tags": "java", "date": "2021-03-28 23:16:34 +0900", "snippet": "Collectors Stream의 종료 연산 중 collect를 할 때 사용된다다양한 방법으로 사용자가 원하는 결과물을 만들어 낼 수 있다Collection 결과물 반환 이미 지정된 형태의 결과물로 반환한다 toCollection Stream의 Element를 collectionFactory의 Return Type으로 모아 반환한다 Function Name Parameter Return Type ..." }, { "title": "Java Stream API", "url": "/SimpleBlog/posts/Java-Stream-API/", "categories": "Language, Java", "tags": "java", "date": "2021-03-25 02:16:34 +0900", "snippet": "Stream API 외부 반복을 통해 작업하는 컬렉션과 다르게 내부 반복을 통해 작업을 수행Stream은 재사용이 불가능함Stream은 원본 데이터를 변경하지 않음Filter-Map 기반의 API를 사용하여 Lazy 연산을 통해 성능을 최적화parallelStream()을 통하여 간단한 병렬처리를 지원Stream의 기본동작 Stream 생성 / 변경 Stream 중간 처리 Stream 최종 처리Stream Class java.util.streampublic interface Stream&amp;lt;T&amp;gt; ..." }, { "title": "Java Functional Interface", "url": "/SimpleBlog/posts/Java-Functional-Interface/", "categories": "Language, Java", "tags": "java", "date": "2021-03-23 01:21:23 +0900", "snippet": "Functional Interface Oracle Java Doc(Java 8) - Functional Interfaces﻿ Object Class의 Method를 제외하고 단 하나의 Abstract method만을 가진 Interface따라서 Functional Interface는 단 하나의 기능을 나타낸다Fucntional Interface Annotation @FunctionalInterface를 사용하여 Compiler가 해당 Interface는 Functional Interface임을 명시하기 위해 사용@Func..." }, { "title": "자바 버전별 변경사항", "url": "/SimpleBlog/posts/Changes-by-Java-Version/", "categories": "Language, Java", "tags": "java", "date": "2021-03-19 01:23:52 +0900", "snippet": " 자바 버전중 LTS인 버전에 대한 변경사항들을 정리OverviewJava Release History version Release Date End of Free Public Updates Extended Support Until JDK Beta 1995     JDK 1.0 January 1996     JDK 1.1 February 199..." } ]
